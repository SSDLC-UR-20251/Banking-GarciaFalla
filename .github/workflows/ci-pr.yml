name: CI - BankingSystem

permissions:
  packages: write
  contents: read

on:
  pull_request:
    branches: [main]

jobs:
  secret-detection:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install necessary packages
        run: |
          pip install git+https://github.com/NASA-AMMOS/slim-detect-secrets.git@exp
          pip install jq

      - name: Create an initial .secrets.baseline if it does not exist
        run: |
          if [ ! -f .secrets.baseline ]; then
            echo "⚠️ No existing .secrets.baseline file detected. Creating a new blank baseline file."
            mkdir empty-dir
            detect-secrets scan empty-dir > .secrets.baseline
            echo "✅ Blank .secrets.baseline file created successfully."
            rm -r empty-dir
          else
            echo "✅ Existing .secrets.baseline file detected. No new baseline file will be created."
          fi

      - name: Scan repository for secrets
        run: |
          cp .secrets.baseline .secrets.new
          detect-secrets scan --exclude-files '.secrets.*' --exclude-files '.git*' > results.json

          compare_secrets() { diff <(jq -r '.results | keys[] as $key | "\($key),\(.[$key] | .[] | .hashed_secret)"' "$1" | sort) <(jq -r '.results | keys[] as $key | "\($key),\(.[$key] | .[] | .hashed_secret)"' "$2" | sort) >/dev/null; }
        
          if ! compare_secrets .secrets.baseline results.json; then
            echo "⚠️ Attention Required! ⚠️" >&2
            echo "New secrets have been detected in your recent commit. Due to security concerns, we cannot display detailed information here and we cannot proceed until this issue is resolved." >&2
            echo "" >&2
            echo "Please download the results.json file to reveal and handle the secrets:" >&2
            echo "" >&2
            exit 1
          fi


      - name: Upload secrets baseline
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: results
          path: results.json
          

  semgrep:
     runs-on: ubuntu-latest
     container:
       image: semgrep/semgrep
     env:
       SEMGREP_APP_TOKEN: c2a43058b0bfe83483ee27321dc5f94a7b600d10343a44084fa3ba521631cf5e
       # Opcionalmente, agrega otras variables para mejorar los hipervínculos en Semgrep AppSec Platform:
       # SEMGREP_REPO_NAME: your-repo-name
       # SEMGREP_REPO_URL: https://github.com/your-org/your-repo
       # SEMGREP_BRANCH: ${{ github.ref_name }}
       # SEMGREP_COMMIT: ${{ github.sha }}
     steps:
       - name: Checkout code
         uses: actions/checkout@v2

       - name: Run Semgrep full scan with custom configuration
         if: ${{ github.ref == 'refs/heads/main' }}
         run: semgrep ci --config "p/default" --pro-intrafile

       - name: Run Semgrep diff scan with custom configuration
         if: ${{ github.ref != 'refs/heads/main' }}
         env:
           SEMGREP_BASELINE_REF: main

         run: semgrep ci --config "p/default" --pro-intrafile


  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: 120d54a4fced5114acf24135d1d5b85f1db31d32

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner | toLower }}/bankingsystem:latest
            ghcr.io/${{ github.repository_owner | toLower }}/bankingsystem:${{ env.SHORT_SHA }}
